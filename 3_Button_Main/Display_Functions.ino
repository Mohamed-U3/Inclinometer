// Logo to Display on start up
const unsigned char ASArchery[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1f, 0x80, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1f, 0x80, 0x0f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x3f, 0x80, 0x0e, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x73, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xf3, 0xc0, 0x0f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xf3, 0xc0, 0x0f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xff, 0xc7, 0x84, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x03, 0xff, 0xe7, 0x9c, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0x81, 0xe7, 0x9f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0x00, 0xe3, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0x03, 0xff, 0xc3, 0xff, 0xc7, 0x03, 0xcf, 0xfe, 0x7f, 0xf8, 0xf0, 0x38, 0x00, 0x00,
  0x00, 0x3f, 0x03, 0xff, 0xe7, 0xff, 0xce, 0x03, 0xdf, 0xfe, 0x7f, 0xfc, 0xf0, 0x70, 0x00, 0x00,
  0x00, 0x7f, 0x03, 0xff, 0xe7, 0xc7, 0xce, 0x03, 0x9f, 0xfe, 0x7f, 0xfc, 0x79, 0xe0, 0x00, 0x00,
  0x00, 0x77, 0x87, 0x81, 0xc7, 0x00, 0x0f, 0xff, 0x9e, 0x00, 0x70, 0x3c, 0x3f, 0xc0, 0x00, 0x00,
  0x00, 0xe3, 0x87, 0x81, 0xce, 0x00, 0x0f, 0xff, 0x9f, 0xfc, 0x70, 0x38, 0x3f, 0x80, 0x00, 0x00,
  0x01, 0xc3, 0x87, 0xff, 0x8e, 0x00, 0x1f, 0xff, 0x9f, 0xfc, 0xff, 0xf8, 0x1f, 0x00, 0x00, 0x00,
  0x03, 0xff, 0xc7, 0xff, 0x8e, 0x03, 0x9e, 0x07, 0xbc, 0x00, 0xff, 0xf0, 0x0e, 0x00, 0x00, 0x00,
  0x03, 0xff, 0xc7, 0xff, 0x8e, 0x03, 0x9c, 0x07, 0x3c, 0x00, 0xff, 0xf8, 0x0e, 0x00, 0x00, 0x00,
  0x07, 0xff, 0xcf, 0x03, 0x8f, 0xff, 0x9c, 0x07, 0x3f, 0xfc, 0xe0, 0x78, 0x1c, 0x00, 0x00, 0x00,
  0x0f, 0x01, 0xef, 0x03, 0x8f, 0xff, 0x1c, 0x07, 0x3f, 0xfc, 0xe0, 0x70, 0x1c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// =========================
//   Sends info to display
// =========================
/*
void writeToDisplay() {


  if (pageLayout == 1) {
    display.clearDisplay();  //  Clears display

    // Page Header
    display.setTextSize(1);                   // set text size
    display.setCursor(5, 0);                  //  Sets coursor position
    display.println(pageTitle);               // set info
    display.drawLine(5, 10, 128, 10, WHITE);  // draw underline

    // Page content
    display.setTextSize(pageContentTextSize);               // set text size
    display.setCursor(cursorLocation_X, cursorLocation_Y);  //  Sets coursor position
    display.print(infoToDisplay);                           // set info
  }

  display.display();  // update display
}
*/
void setupScreens() {
  // Show startup message - Logo - First // EDIT TO LOGO
  display.clearDisplay();                               //for Clearing the display
  display.drawBitmap(5, 0, ASArchery, 128, 32, WHITE);  // display.drawBitmap(x position, y position, bitmap data, bitmap width, bitmap height, color)
  display.display();
  delay(2000);

  // Show startup message - Version - Second
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(5, 0);
  display.println(codeTitle);
  //display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(5, 20);
  display.print("V - ");
  display.println(codeVersion);
  display.display();
  delay(1000);
}

void drawHeader(String text) {
  display.clearDisplay();  //  Clears display
  display.setTextSize(1);  // set text size
  display.setTextColor(WHITE);
  display.setCursor(5, 0);                  //  Sets coursor position
  display.println(text);        // set info
  display.drawLine(5, 10, 128, 10, WHITE);  // draw underline
}
/*
void screenText(String text) {
  display.clearDisplay();  //  Clears display
  display.setTextSize(1);  // set text size
  display.setTextColor(WHITE);
  display.setCursor(5, 0);  //  Sets coursor position
  display.print(text);      // set info
  //display.drawLine(5, 10, 128, 10, WHITE);  // draw underline
  delay(1000);
}


void flashScreen(void) {
  display.clearDisplay();  //  Clears display
  //fill screen black
  display.fillRect(iii, iii, display.width(), display.height(), SSD1306_BLACK);
  display.display();  // Update screen with each newly-drawn rectangle
  delay(500);

  //fill screen white
  display.fillRect(iii, iii, display.width(), display.height(), SSD1306_WHITE);
  display.display();  // Update screen with each newly-drawn rectangle
  delay(2000);
}

*/